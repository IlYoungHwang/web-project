/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2018-06-09 16:22:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class uploadAjax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \n");
      out.write("  \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".fileDrop {\n");
      out.write("\twidth: 100%;\n");
      out.write("\theight: 200px;\n");
      out.write("\tborder: 1px dotted blue;\n");
      out.write("}\n");
      out.write("\n");
      out.write("small {\n");
      out.write("\tmargin-left: 3px;\n");
      out.write("\tfont-weight: bold;\n");
      out.write("\tcolor: gray;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<h3>Ajax File Upload</h3>\n");
      out.write("\t<div class='fileDrop'></div>\n");
      out.write("\n");
      out.write("\t<div class='uploadedList'></div>\n");
      out.write("\n");
      out.write("\t<script src=\"//code.jquery.com/jquery-3.3.1.min.js\"></script>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(\".fileDrop\").on(\"dragenter dragover\", function(event) {\n");
      out.write("\t\t\tevent.preventDefault();\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t\t$(\".fileDrop\").on(\"drop\", function(event){\n");
      out.write("\t\t\tevent.preventDefault();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar files = event.originalEvent.dataTransfer.files;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar file = files[0];\n");
      out.write("\n");
      out.write("\t\t\t//console.log(file);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar formData = new FormData();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tformData.append(\"file\", file);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t  url: '/uploadAjax',\n");
      out.write("\t\t\t\t  data: formData,\n");
      out.write("\t\t\t\t  dataType:'text',\n");
      out.write("\t\t\t\t  processData: false,\n");
      out.write("\t\t\t\t  contentType: false,\n");
      out.write("\t\t\t\t  type: 'POST',\n");
      out.write("\t\t\t\t  success: function(data){\n");
      out.write("\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  var str =\"\";\n");
      out.write("\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  if(checkImageType(data)){\n");
      out.write("\t\t\t\t\t\t  str =\"<div><a href=displayFile?fileName=\"+getImageLink(data)+\">\"\n");
      out.write("\t\t\t\t\t\t\t\t  +\"<img src='displayFile?fileName=\"+data+\"'/>\"\n");
      out.write("\t\t\t\t\t\t\t\t  +\"</a><small data-src=\"+data+\">X</small></div>\";\n");
      out.write("\t\t\t\t\t  }else{\n");
      out.write("\t\t\t\t\t\t  str = \"<div><a href='displayFile?fileName=\"+data+\"'>\" \n");
      out.write("\t\t\t\t\t\t\t\t  + getOriginalName(data)+\"</a>\"\n");
      out.write("\t\t\t\t\t\t\t\t  +\"<small data-src=\"+data+\">X</small></div></div>\";\n");
      out.write("\t\t\t\t\t  }\n");
      out.write("\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  $(\".uploadedList\").append(str);\n");
      out.write("\t\t\t\t  }\n");
      out.write("\t\t\t\t});\t\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t$(\".uploadedList\").on(\"click\", \"small\", function(event){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t var that = $(this);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t   $.ajax({\n");
      out.write("\t\t\t\t   url:\"deleteFile\",\n");
      out.write("\t\t\t\t   type:\"post\",\n");
      out.write("\t\t\t\t   data: {fileName:$(this).attr(\"data-src\")},\n");
      out.write("\t\t\t\t   dataType:\"text\",\n");
      out.write("\t\t\t\t   success:function(result){\n");
      out.write("\t\t\t\t\t   if(result == 'deleted'){\n");
      out.write("\t\t\t\t\t\t   that.parent(\"div\").remove();\n");
      out.write("\t\t\t\t\t   }\n");
      out.write("\t\t\t\t   }\n");
      out.write("\t\t\t   });\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("/* \t\t\n");
      out.write("$(\".fileDrop\").on(\"drop\", function(event) {\n");
      out.write("\tevent.preventDefault();\n");
      out.write("\t\n");
      out.write("\tvar files = event.originalEvent.dataTransfer.files;\n");
      out.write("\t\n");
      out.write("\tvar file = files[0];\n");
      out.write("\n");
      out.write("\t//console.log(file);\n");
      out.write("\tvar formData = new FormData();\n");
      out.write("\t\n");
      out.write("\tformData.append(\"file\", file);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t$.ajax({\n");
      out.write("\t\t  url: '/uploadAjax',\n");
      out.write("\t\t  data: formData,\n");
      out.write("\t\t  dataType:'text',\n");
      out.write("\t\t  processData: false,\n");
      out.write("\t\t  contentType: false,\n");
      out.write("\t\t  type: 'POST',\n");
      out.write("\t\t  success: function(data){\n");
      out.write("\t\t\t  \n");
      out.write("\t\t\t  var str =\"\";\n");
      out.write("\t\t\t  \n");
      out.write("\t\t\t  console.log(data);\n");
      out.write("\t\t\t  console.log(checkImageType(data));\n");
      out.write("\t\t\t  \n");
      out.write("\t\t\t  if(checkImageType(data)){\n");
      out.write("\t\t\t\t  str =\"<div><a href='displayFile?fileName=\"+getImageLink(data)+\"'>\"\n");
      out.write("\t\t\t\t\t\t  +\"<img src='displayFile?fileName=\"+data+\"'/></a>\"\n");
      out.write("\t\t\t\t\t\t  +data +\"</div>\";\n");
      out.write("\t\t\t  }else{\n");
      out.write("\t\t\t\t  str = \"<div><a href='displayFile?fileName=\"+data+\"'>\" \n");
      out.write("\t\t\t\t\t\t  + getOriginalName(data)+\"</a></div>\";\n");
      out.write("\t\t\t  }\n");
      out.write("\t\t\t  \n");
      out.write("\t\t\t  $(\".uploadedList\").append(str);\n");
      out.write("\t\t  }\n");
      out.write("\t\t});\t\t\t\n");
      out.write("});\t */\n");
      out.write("\n");
      out.write("\n");
      out.write("function getOriginalName(fileName){\t\n");
      out.write("\n");
      out.write("\tif(checkImageType(fileName)){\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar idx = fileName.indexOf(\"_\") + 1 ;\n");
      out.write("\treturn fileName.substr(idx);\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function getImageLink(fileName){\n");
      out.write("\t\n");
      out.write("\tif(!checkImageType(fileName)){\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tvar front = fileName.substr(0,12);\n");
      out.write("\tvar end = fileName.substr(14);\n");
      out.write("\t\n");
      out.write("\treturn front + end;\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/* \t\t$(\".fileDrop\").on(\"drop\", function(event) {\n");
      out.write("\t\t\tevent.preventDefault();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar files = event.originalEvent.dataTransfer.files;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar file = files[0];\n");
      out.write("\n");
      out.write("\t\t\t//console.log(file);\n");
      out.write("\t\t\tvar formData = new FormData();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tformData.append(\"file\", file);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t  url: '/uploadAjax',\n");
      out.write("\t\t\t\t  data: formData,\n");
      out.write("\t\t\t\t  dataType:'text',\n");
      out.write("\t\t\t\t  processData: false,\n");
      out.write("\t\t\t\t  contentType: false,\n");
      out.write("\t\t\t\t  type: 'POST',\n");
      out.write("\t\t\t\t  success: function(data){\n");
      out.write("\t\t\t\t\t \t\n");
      out.write("\t\t\t\t\t  alert(data);\n");
      out.write("\t\t\t\t\t \n");
      out.write("\t\t\t\t  }\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t}); */\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\tfunction checkImageType(fileName){\n");
      out.write("\t\t\n");
      out.write("\t\tvar pattern = /jpg|gif|png|jpeg/i;\n");
      out.write("\t\t\n");
      out.write("\t\treturn fileName.match(pattern);\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
